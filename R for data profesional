##Operator R
+, -, /, abs(), factorial, rnorm(x, mean=0, sd= 1), round(x, digits=...), ceiling(), floor()



##Vektor
c(1,2,3)
c("a","b","c")
c(TRUE,FALSE)

seq() memiliki kemiripan dengan sequential numeric vectors, tetapi kita dapat dimodifikasi interval antar bilangan yang dihasilkan
Syntax : Seq(bilangan batas bawah, bilangan batas atas, interval)
contoh : > my_seq <- seq(1,3,0.5)
         > my_seq
         [1] 1.0 1.5 2.0 2.5 3.0

rep() digunakan untuk mengulangi nilai yang ada pada suatu vector sebanyak n kali.
Syntax : Rep(vector yang akan diulang sebanyak n kali, n)
contoh : > my_rep <- rep(my_seq,2)
         > my_rep
         [1] 1.0 1.5 2.0 2.5 3.0 1.0 1.5 2.0 2.5 3.0

rev(x), Membalik urutan dari isi vector
sum(x), Menjumlahkan semua isi vector yang berisi data numerik atau logical.
cumsum(x), Mengembalikan vector yang berisi penjumlahan kumulatif (running total).
diff(x), Mengembalikan vector yang berisi selisih dari tiap elemen.
max(x), Mengembalikan elemen vector yang paling besar.
min(x), Mengembalikan elemen vector yang paling kecil.
mean(x), Mengembalikan nilai rata-rata dari elemen di dalam vector.



##Dataframe
> #Konstruksi Dataframe
> nama <- c("Kroma", "Andra", "Aksara", "Antara", "Senja")
> pekerjaan <- c("Manager", "Senior Data Scientist", "Data Analyst", "Data Engineer", "Senior Data Analyst")
> periode_kerja <- c(5,2,1,1,3)

> df <- data.frame(nama,pekerjaan,periode_kerja)

> #Tampilkan isi dari df
> df
    nama             pekerjaan periode_kerja
1  Kroma               Manager             5
2  Andra Senior Data Scientist             2
3 Aksara          Data Analyst             1
4 Antara         Data Engineer             1
5  Senja   Senior Data Analyst             3

> #Tampilkan jabatan dari Kroma
> df[1,2]
[1] "Manager"

> #Tampilkan jabatan dari Senja
> df[5,2]
[1] "Senior Data Analyst"

> #Tampilkan sudah berapa lama Andra bekerja di DQLab
> df[2,3]
[1] 2

> #Tampilkan sudah berapa lama Aksara bekerja di DQLab
> df[3,3]
[1] 1

> #Tampilkan semua informasi mengenai Antara
> df[4,]
    nama     pekerjaan periode_kerja
4 Antara Data Engineer             1

> #Tampilkan 3 baris pertama dari kolom 'pekerjaan'
> df[1:3,"pekerjaan"]
[1] "Manager"               "Senior Data Scientist" "Data Analyst"         

> #Tampilkan 2 baris pertama dari kolom 'periode_kerja'
> df[1:2,"periode_kerja"]
[1] 5 2

> #Tampilkan seluruh element pada kolom 'nama' dengan menggunakan $
> df$nama
[1] "Kroma"  "Andra"  "Aksara" "Antara" "Senja" 

> #Tampilkan seluruh element pada kolom 'pekerjaan' dengan menggunakan $
> df$pekerjaan
[1] "Manager"               "Senior Data Scientist" "Data Analyst"         
[4] "Data Engineer"         "Senior Data Analyst"  

> #Tampilkan seluruh element pada kolom 'periode_kerja' dengan menggunakan $
> df$periode_kerja
[1] 5 2 1 1 3



##
lapply(X, FUN, ...)

lapply() menerima sebuah vector, list, atau Dataframe (X) dan mengimplementasikan FUN (function) untuk setiap element yang ada di dalamnya. 
Output atau hasil dari lapply() adalah sebuah list dengan ukuran yang sama dengan X, dimana setiap element yang dihasilkan merupakan hasil dari
implementasi FUN(function).

> #Ubahlah semua data character yang ada pada Dataframe df menjadi huruf kecil
> lapply(df, tolower)
$nama
[1] "kroma"  "andra"  "aksara" "antara" "senja" 

$pekerjaan
[1] "manager"               "senior data scientist" "data analyst"         
[4] "data engineer"         "senior data analyst"  

$periode_kerja
[1] "5" "2" "1" "1" "3"

> #Tampilkan kelas atau tipe data dari tiap kolom pada df dengan menggunakan lapply()
> lapply(df,class)
$nama
[1] "character"

$pekerjaan
[1] "character"

$periode_kerja
[1] "numeric"

##sapply
sapply(X, FUN, ...)

> #Tampilkan kelas atau tipe data dari tiap kolom pada df dengan menggunakan lapply()
> l_apply <- lapply(df,class)

> #tampilkan isi dari variable l_apply
> l_apply
$nama
[1] "character"

$pekerjaan
[1] "character"

$periode_kerja
[1] "numeric"


> #tampilkan class dari variable l_apply
> class(l_apply)
[1] "list"

> #Tampilkan kelas atau tipe data dari tiap kolom pada df dengan menggunakan sapply()
> s_apply <- sapply(df,class)

> #tampilkan isi dari variable s_apply
> s_apply
         nama     pekerjaan periode_kerja 
  "character"   "character"     "numeric" 

> #tampilkan class dari variable s_apply
> class(s_apply)
[1] "character"



##aggregate(x, by, FUN)

x   : Dataframe atau salah satu field dari Dataframe
by   : list() berisi grouping element (yang menentukan grouping dari subset)
FUN : Function (fungsi agregasi yang digunakan, misalnya: sum, count, dsb.)

> data
    nama   hari jam_kerja
1  Andra  Senin         8
2  Andra Selasa         9
3  Senja  Senin         8
4  Senja Selasa         8
5 Aksara  Senin         9
6 Aksara Selasa         9
7  Kroma  Senin         8
8  Kroma Selasa        10

> #Jumlah jam kerja tiap individu
> aggregate(data$jam_kerja, list(data$nama), sum)
  Group.1  x
1  Aksara 18
2   Andra 17
3   Kroma 18
4   Senja 16

> #Rata-rata jam kerja berdasarkan hari
> aggregate(data$jam_kerja, list(data$hari), mean)
  Group.1    x
1  Selasa 9.00
2   Senin 8.25 



